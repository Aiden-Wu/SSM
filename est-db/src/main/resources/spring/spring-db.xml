<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
                        http://www.springframework.org/schema/tx   
                        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
                        ">
    <import resource="classpath*:spring/spring-utils.xml"/>                       
    <context:component-scan base-package="com.xipin.est.db" />
    
    <!-- redis properties -->
    <context:property-placeholder location="file:D:/project/conf/redis.properties" ignore-unresolvable="true" ignore-resource-not-found="true" order="2" system-properties-mode="NEVER"/>
    <context:property-placeholder location="file:/opt/xipinconf/est/conf/redis.properties" ignore-unresolvable="true" ignore-resource-not-found="true" order="2" system-properties-mode="NEVER"/>
   
	
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/db/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/xipin/est/db/mapper/**/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="sqlSessionFactoryLog" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceLog" />
		<property name="configLocation" value="classpath:/db/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/xipin/est/db/mapper/ILogMapper.xml</value>
			</list>
		</property>
	</bean>
	
	
	<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.xipin.est.db.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean name="mapperScannerConfigurerLog" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.xipin.est.db.log.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactoryLog" />
	</bean>
	
	<!-- <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
    	<constructor-arg ref="dataSource" />
	</bean> -->
	
	<!-- 配置事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="txManagerLog"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceLog"/>
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
	
	<tx:annotation-driven transaction-manager="txManagerLog" />
	
	<!-- redis 配置 -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"  p:pool-config-ref="poolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>  -->
    
    
    <!-- redis 主从连接 -->
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
	    <property name="master">
	        <bean class="org.springframework.data.redis.connection.RedisNode">
	            <property name="name" value="${im.hs.server.redis.sentinel.masterName}"/>
	        </bean>
	    </property>
	    <property name="sentinels">
	        <set>
	            <bean class="org.springframework.data.redis.connection.RedisNode">
	                <constructor-arg name="host" value="${im.hs.server.redis.sentinel1.host}"></constructor-arg>
	                <constructor-arg name="port" value="${im.hs.server.redis.sentinel1.port}"></constructor-arg>
	            </bean>
	        </set>
	    </property>
	</bean>

	<bean id="jeidsConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	    <constructor-arg ref="redisSentinelConfiguration" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <property name="connectionFactory" ref="jeidsConnectionFactory"/>
	</bean>

</beans>
